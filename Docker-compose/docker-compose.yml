version: '2'
services:
  master:
    build: ./master
    hostname: master
    environment:
      SPARK_MODE: master
    user: root  
    expose:
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7077
      - 6066
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8080:8080
    depends_on:
      - mongo
      - kafka

  worker:
    image: bitnami/spark:2.4.4
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://master:7077
    hostname: worker
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://master:7077
    expose:
      - 7012
      - 7013
      - 7014
      - 7015
      - 8881
    ports:
      - 8082:8082
    depends_on:
      - mongo
      - kafka  

  mongo:
    build: ./mongo
    hostname: mongo
    restart: always

  mongo-express:
    image: mongo-express:0.54
    hostname: mongo-express
    restart: always
    ports:
      - 8081:8081 

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: wurstmeister/kafka:2.12-2.3.1
    hostname: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: flight_delay_classification_request:1:1
    depends_on:
      - zookeeper

  flask: 
    build: ./flask
    hostname: flask
    restart: always
    ports: 
      - 5000:5000 
    depends_on:
      - kafka
      - mongo        